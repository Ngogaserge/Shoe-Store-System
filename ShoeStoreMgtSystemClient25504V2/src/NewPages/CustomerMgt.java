/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NewPages;

import Model.Customer;
import Service.CustomerService;
import static java.lang.Character.isLowerCase;
import static java.lang.Character.isUpperCase;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Serge
 */
public class CustomerMgt extends javax.swing.JInternalFrame {
    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form CustomerMgt
     */
    public CustomerMgt() {
        initComponents();
        addTableColumnsHeader();
        addTableRowDataCustomer();
    }
    private void addTableColumnsHeader(){
        tableModel.addColumn("Id");
        tableModel.addColumn("First Name");
        tableModel.addColumn("Last Name");
        tableModel.addColumn("Contact");
        
        custTable.setModel(tableModel);
    }
    
    private void addTableRowDataCustomer(){
        try {
            tableModel.setRowCount(0);
            Registry thereg = LocateRegistry.getRegistry("127.0.0.1", 6000);
            CustomerService service = (CustomerService) thereg.lookup("customer");
            List<Customer> customers = service.retrieveCustomer();
            for(Customer thecustomer: customers){
                tableModel.addRow(new Object[]{
                    thecustomer.getCustomerId(),
                    thecustomer.getFirstName(),
                    thecustomer.getLastName(),
                    thecustomer.getPhoneNumber()
                    
                        
//                thecustomers.getCust_phone()
                });
            }
        } catch (RemoteException ex) {
            Logger.getLogger(ShoeMgt.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ShoeMgt.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        fnametxt = new javax.swing.JTextField();
        lnametxt = new javax.swing.JTextField();
        contacttxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        custTable = new javax.swing.JTable();
        searchtxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("First Name: ");

        jLabel2.setText("Last Name:");

        jLabel3.setText("Contact:");

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        fnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnametxtActionPerformed(evt);
            }
        });

        lnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnametxtActionPerformed(evt);
            }
        });

        contacttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contacttxtActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        custTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                " Id", "First Name", "Last Name", "Contact"
            }
        ));
        jScrollPane1.setViewportView(custTable);

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(searchBtn)
                .addGap(212, 212, 212))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(registerBtn)
                        .addGap(37, 37, 37)
                        .addComponent(updateBtn)
                        .addGap(39, 39, 39)
                        .addComponent(deleteBtn)))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn))
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn)
                    .addComponent(registerBtn))
                .addContainerGap(594, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnametxtActionPerformed

    private void contacttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contacttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contacttxtActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
            try {
            if(fnametxt.getText().trim().isEmpty() || lnametxt.getText().trim().isEmpty() || contacttxt == null || contacttxt.getText().trim().isEmpty()  ){
            JOptionPane.showMessageDialog(this, "Plsease Fill All fields","Empty Field",JOptionPane.ERROR_MESSAGE);
           // resetBtnActionPerformed(evt);
            
            
       
            //resetBtnActionPerformed(evt);
        }
            else if (isLowerCase(fnametxt.getText().charAt(0))){
                    JOptionPane.showMessageDialog(this, "Name should start with capital letter","Invalid input",JOptionPane.ERROR_MESSAGE);
                    }
        else if(contacttxt.getText().length() != 10){
         JOptionPane.showMessageDialog(this, "Contact should be size 10 ","Invalid Field",JOptionPane.ERROR_MESSAGE);    
        }
        else if(!contacttxt.getText().matches("\\d+(\\.\\d+)?")) {
    JOptionPane.showMessageDialog(this, "Contact should be a number", "Invalid input", JOptionPane.ERROR_MESSAGE);
}
        else{
            addTableRowDataCustomer();
            Customer customer = new Customer();
            customer.setFirstName(fnametxt.getText());
            customer.setLastName(lnametxt.getText());
            customer.setPhoneNumber(Integer.parseInt(contacttxt.getText()));

            Registry thereg = LocateRegistry.getRegistry("127.0.0.1", 6000);
            CustomerService service = (CustomerService) thereg.lookup("customer");
            Customer customerObj = service.registerCustomer(customer);
            if (customerObj != null) {
                JOptionPane.showMessageDialog(this, "Data inserted", "Result", JOptionPane.INFORMATION_MESSAGE);
                addTableRowDataCustomer();
            // addTableRowDataCustomer();
            } else {
                JOptionPane.showMessageDialog(this, "Data not Inserted", "Result", JOptionPane.ERROR_MESSAGE);
            }  
        } 
            }catch (Exception e) {
            e.printStackTrace();
        }
      // TODO add your handling code here:
    }//GEN-LAST:event_registerBtnActionPerformed

    private void fnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnametxtActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int selectedRow =  custTable.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) custTable.getModel();
        int theId = Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString());
        if (selectedRow == -1) {
    // No row is selected, handle this case appropriately
    JOptionPane.showMessageDialog(null, "Please select a row to update.", "No row selected", JOptionPane.WARNING_MESSAGE);
    return;
}
        Customer cust = new Customer();
        cust.setCustomerId(theId);
        cust.setFirstName(fnametxt.getText());
        cust.setLastName(lnametxt.getText());
        cust.setPhoneNumber(Integer.parseInt(contacttxt.getText()));
        try {
             Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
             CustomerService service = (CustomerService) theregistry.lookup("customer");
             Customer customerObj = service.updateCustomer(cust);
             if(customerObj != null){
                 JOptionPane.showMessageDialog(this, "Customer Updated","Result",JOptionPane.INFORMATION_MESSAGE);
                 addTableRowDataCustomer();
                 fnametxt.setText("");
                 lnametxt.setText("");
                 contacttxt.setText("");
             }
             else{
                 JOptionPane.showMessageDialog(this, "Customer not updated","Result",JOptionPane.ERROR_MESSAGE);
                 
             }
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try {
            if(searchtxt.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Search Id cant be empty", "Empty Feild", JOptionPane.ERROR_MESSAGE);
        }
            Customer customer = new Customer();
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            CustomerService service = (CustomerService) theregistry.lookup("customer");
            customer.setCustomerId(Integer.parseInt(searchtxt.getText()));
            Customer customerObj = service.searchCustomer(customer);
            if(customerObj == null){
                JOptionPane.showMessageDialog(this, "Id does not exist", "Invalid id", JOptionPane.ERROR_MESSAGE);
            }
            else{
                fnametxt.setText(customerObj.getFirstName());
                lnametxt.setText(customerObj.getLastName());
                contacttxt.setText(""+customerObj.getPhoneNumber());
                
            }
        } catch (Exception e) {
        }
 // TODO add your handling code here:
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
            Registry thereg = LocateRegistry.getRegistry("127.0.0.1", 6000);
            CustomerService service = (CustomerService) thereg.lookup("customer");
            Customer cust = new Customer();
            cust.setCustomerId(Integer.parseInt(searchtxt.getText()));
            Customer customerObj = service.deleteCustomer(cust);
            if(customerObj == null){
              JOptionPane.showMessageDialog(this, "Data not deleted","Result",JOptionPane.ERROR_MESSAGE);
          }
          else{
              JOptionPane.showMessageDialog(this, "Data deleted","Result",JOptionPane.INFORMATION_MESSAGE);
              addTableRowDataCustomer();
            }
        } catch (Exception e) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField contacttxt;
    private javax.swing.JTable custTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fnametxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lnametxt;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
